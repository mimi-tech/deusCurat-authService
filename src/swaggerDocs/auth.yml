paths:
  /create-account:
    post:
      tags: # Tag property
        - AUTH # Value of the tag
      summary:  EASYMOVE ACCOUNT REGISTRATION ENDPOINT.
      produces:
        - application/json
      parameters:
        - in: body # request body
          name: create-user-account # name of request, can be any name
          description: It enables all users to create account
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/usersAccount"
      responses: # server responses
        201:
          description: should return account registration successful

  /login:
    post:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: GENERAL LOGIN ENDPOINT FOR USERS.
      produces:
        - application/json
      parameters:
        - in: body # request body
          name: general login endpoint # name of request, can be any name
          description: It enables all church account types to login
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/generalLogin"
      responses: # server responses
        201:
          description: should return login successful      



  /admin-login:
    post:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: GENERAL LOGIN ENDPOINT FOR ADMINS.
      produces:
        - application/json
      parameters:
        - in: body # request body
          name: general login endpoint for admin # name of request, can be any name
          description: It enables all admin to login
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/adminLogin"
      responses: # server responses
        201:
          description: should return login successful                


  /validate-user-token: # path of the grp from your endpoint
    post:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: ENDPOINT FOR VALIDATIONG TOKEN
      produces:
        - application/json
      parameters: # request parameters
        - in: body # request body
          name: for validating user token # name of request, can be any name
          description: It enables user to validate auth token
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/validateUserToken"
      responses: # server responses
        201:
          description: should return user details

  
  /update-password:
    put:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: FOR UPDATING PASSWORD
      produces:
        - application/json
      parameters:
        - in: body # request body
          name: update-password # name of request, can be any name
          description: It enables users to update their password
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/updatePassword"
      responses: # server responses
        200:
          description: should return password updated successfully                
  

  /update-account-data:
    put:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: ACCOUNT DATA UPDATE.
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: access token
          required: true
          default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzIwODQxODB9.60qxpvDKlXV3x4-XDf2GRWgEkuSvL_XuCYPbn5jil-0

        - in: body # request body
          name: user-account-update # name of request, can be any name
          description: It enables app accounts to be updated
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/updateAccountData"
      responses: # server responses
        201:
          description: should return update successful

  /get-commons:
    get:
      tags:
        - COMMONS # Value of the tag
      summary: GET ALL COMMONS.
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          type: number
          default: 1
          required: true

      responses:
        200:
          description: should return all commons

  /get-all-needy:
    get:
      tags:
        - NEEDY # Value of the tag
      summary: GET ALL NEEDY.
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: access token
          required: true
          default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzIwODQxODB9.60qxpvDKlXV3x4-XDf2GRWgEkuSvL_XuCYPbn5jil-0

        - in: query
          name: page
          type: number
          default: 1
          required: true

        - in: query
          name: type
          type: string
          default: all
          required: true  

      responses:
        200:
          description: should return all testimony 

  /get-payment:
    get:
      tags:
        - PAYMENT # Value of the tag
      summary: GET ALL PAYMENT.
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: access token
          required: true
          default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzIwODQxODB9.60qxpvDKlXV3x4-XDf2GRWgEkuSvL_XuCYPbn5jil-0

        - in: query
          name: page
          type: number
          default: 1
          required: true

        - in: query
          name: requestId
          type: string
          default: 18732736297312837832
          required: false  

        - in: query
          name: highestDonors
          type: string
          default: highestDonors
          required: false  

        - in: query
          name: type
          type: string
          default: 'all'
          required: false      

      responses:
        200:
          description: should return all commons  


  /get-testimony:
    get:
      tags:
        - TESTIMONY # Value of the tag
      summary: GET ALL TESTIMONY.
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: access token
          required: true
          default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzIwODQxODB9.60qxpvDKlXV3x4-XDf2GRWgEkuSvL_XuCYPbn5jil-0

        - in: query
          name: page
          type: number
          default: 1
          required: true

      responses:
        200:
          description: should return all testimony                          
         
        

definitions: # Schema definition for request body

  usersAccount:
    type: object
    properties:
      email:
        type: string
        default: miriam@gmail.com

      password:
        type: string
        default: password

      phoneNumber:
        type: string
        default: +2348037335555

      firstName:
        type: string
        default: Miriam

      lastName:
        type: string
        default: Mimi 

  
      gender:
        type: string
        default: Male

    

  generalLogin:
    type: object
    properties:
      emailAddress:
        type: string
        default: miriam@gmail.com

      password:
        type: string
        default: abc123  

      phoneNumber:
        type: string
        default: +2348037335555 


  adminLogin:
    type: object
    properties:
      emailAddress:
        type: string
        default: miriam@gmail.com

      password:
        type: string
        default: abc123  
              


  validateUserToken:
    type: object
    properties:
      token:
        type: string
        default: pass in user token

  
  

  updatePassword:
    type: object
    properties:
      email:
        type: string
        default: mimi@gmail.com

      password:
        type: string
        default: password  


  updateAccountData:
    type: object
    properties:
      updateEmail:
        type: string
        default: lilstex@gmail.com


      firstName:
        type: string
        default: Miriam

      lastName:
        type: string
        default: Mimi

      gender:
        type: string
        default: male 



  